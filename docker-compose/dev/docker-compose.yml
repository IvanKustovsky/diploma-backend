services:
  rent-app-db:
    container_name: rent-app-db
    ports:
      - "5432:5432"
    volumes:
      - ./sql:/docker-entrypoint-initdb.d
    extends:
      file: common-config.yml
      service: microservice-db-config

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.6
    container_name: keycloak
    ports:
      - "8020:8080"
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL_HOST: rent-app-db
      KC_DB_URL_DATABASE: keycloak
      KC_DB_URL_PORT: 5432
      KC_DB_USERNAME: ${KC_DB_USERNAME}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    command: >
      -v start-dev --import-realm
    depends_on:
      rent-app-db:
        condition: service_healthy
    networks:
      - rent-app

  configserver:
    image: "ivankus197/config-service:v1"
    container_name: configserver-ms
    ports:
      - "8888:8888"
    healthcheck:
      test: "curl --fail --silent localhost:8888/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-base-config
    environment:
      SPRING_APPLICATION_NAME: "config-service"

  eurekaserver:
    image: "ivankus197/discovery-service:v1"
    container_name: eurekaserver-ms
    ports:
      - "8070:8070"
    depends_on:
      configserver:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8070/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-configserver-config
    environment:
      SPRING_APPLICATION_NAME: "discovery-service"

  users:
    image: "ivankus197/user-service:v1"
    container_name: users-ms
    ports:
      - "8085:8085"
    healthcheck:
      test: "curl --fail --silent localhost:8085/actuator/health/readiness | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 20
      start_period: 10s
    environment:
      SPRING_APPLICATION_NAME: "users"
      SPRING_DATASOURCE_URL: "${SPRING_DATASOURCE_URL}"
      SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: "${SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI}"
    depends_on:
      rent-app-db:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-eureka-config

  equipments:
    image: "ivankus197/equipment-service:v1"
    container_name: equipments-ms
    ports:
      - "8090:8090"
    healthcheck:
      test: "curl --fail --silent localhost:8090/actuator/health/readiness | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 20
      start_period: 10s
    environment:
      SPRING_APPLICATION_NAME: "equipments"
      SPRING_DATASOURCE_URL: "${SPRING_DATASOURCE_URL}"
      SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: "${SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI}"
    depends_on:
      rent-app-db:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-eureka-config

  auth-service:
    image: "ivankus197/auth-service:v1"
    container_name: authentication-ms
    ports:
      - "8585:8585"
    healthcheck:
      test: "curl --fail --silent localhost:8585/actuator/health/readiness | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 20
      start_period: 10s
    environment:
      SPRING_APPLICATION_NAME: "auth-service"
      SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: "${SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI}"
      KEYCLOAK_URL: "${KEYCLOAK_URL}"
      KEYCLOAK_REST_API_CLIENT_ID: "${KEYCLOAK_REST_API_CLIENT_ID}"
      KEYCLOAK_REST_API_CLIENT_SECRET: "${KEYCLOAK_REST_API_CLIENT_SECRET}"
    depends_on:
      eurekaserver:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-eureka-config

  rent-service:
    image: "ivankus197/rent-service:v1"
    container_name: rental-ms
    ports:
      - "8060:8060"
    healthcheck:
      test: "curl --fail --silent localhost:8060/actuator/health/readiness | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 20
      start_period: 10s
    environment:
      SPRING_APPLICATION_NAME: "rent-service"
      SPRING_DATASOURCE_URL: "${SPRING_DATASOURCE_URL}"
      SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: "${SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI}"
    depends_on:
      eurekaserver:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-eureka-config

  gatewayserver:
    image: "ivankus197/gateway-service:v1"
    container_name: gatewayserver-ms
    ports:
      - "8080:8080"
    depends_on:
      eurekaserver:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "gateway-service"
      SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: "${SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI}"
    extends:
      file: common-config.yml
      service: microservice-eureka-config

  frontend:
    image: "ivankus197/frontend:v1"
    container_name: frontend
    ports:
      - "3000:80"
    networks:
      - rent-app
    depends_on:
      - gatewayserver

networks:
  rent-app:
    driver: "bridge"